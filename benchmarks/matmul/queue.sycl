auto a = buf_a.get_access<sycl::access::mode::read>(h);
auto b = buf_b.get_access<sycl::access::mode::read>(h);
auto c = buf_c.get_access<sycl::access::mode::discard_write>(h);

h.parallel_for<class KernelMatmul>(size_range, [=](nd_item<2> item) {
  size_t i = item.get_global_id(0);
  size_t j = item.get_global_id(1);

  auto sum = 0.0f;
  for (size_t k = 0; k < N; ++k) {
    const auto a_ik = a[{i, k}];
    const auto b_kj = b[{k,j}];
    sum += a_ik * b_kj;
  }
  c[{i, j}] = sum;
});
